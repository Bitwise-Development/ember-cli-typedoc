// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`addon documentation generation creates documentation when the "enabled" config flag is set 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "flags": Object {},
          "id": 2,
          "inheritedFrom": Object {
            "name": "Component.constructor",
            "type": "reference",
          },
          "kind": 512,
          "kindString": "Constructor",
          "name": "constructor",
          "signatures": Array [
            Object {
              "comment": Object {
                "shortText": "Constructs a new component and assigns itself the passed properties. You
should not construct new components yourself. Instead, Glimmer will
instantiate new components automatically as it renders.",
              },
              "flags": Object {},
              "id": 3,
              "inheritedFrom": Object {
                "name": "Component.constructor",
                "type": "reference",
              },
              "kind": 16384,
              "kindString": "Constructor signature",
              "name": "new default",
              "parameters": Array [
                Object {
                  "comment": Object {},
                  "flags": Object {},
                  "id": 4,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "owner",
                  "type": Object {
                    "name": "unknown",
                    "type": "intrinsic",
                  },
                },
                Object {
                  "comment": Object {
                    "shortText": "
",
                  },
                  "flags": Object {},
                  "id": 5,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "args",
                  "type": Object {
                    "declaration": Object {
                      "flags": Object {},
                      "id": 6,
                      "kind": 65536,
                      "kindString": "Type literal",
                      "name": "__type",
                    },
                    "type": "reflection",
                  },
                },
              ],
              "type": Object {
                "id": 1,
                "name": "default",
                "type": "reference",
              },
            },
          ],
        },
      ],
      "extendedTypes": Array [
        Object {
          "name": "Component",
          "type": "reference",
        },
      ],
      "flags": Object {},
      "groups": Array [
        Object {
          "children": Array [
            2,
          ],
          "kind": 512,
          "title": "Constructors",
        },
      ],
      "id": 1,
      "kind": 128,
      "kindString": "Class",
      "name": "default",
      "sources": Array [
        Object {
          "character": 21,
          "fileName": "test-packages/test-addon/addon/components/test-component.ts",
          "line": 3,
        },
      ],
    },
  ],
  "flags": Object {},
  "groups": Array [
    Object {
      "children": Array [
        1,
      ],
      "kind": 128,
      "title": "Classes",
    },
  ],
  "id": 0,
  "kind": 1,
  "kindString": "Project",
  "name": "test-addon",
  "originalName": "",
  "sources": Array [
    Object {
      "character": 0,
      "fileName": "test-packages/test-addon/addon/components/test-component.ts",
      "line": 1,
    },
  ],
}
`;

exports[`addon documentation generation creates documentation when the env var is set 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "flags": Object {},
          "id": 2,
          "inheritedFrom": Object {
            "name": "Component.constructor",
            "type": "reference",
          },
          "kind": 512,
          "kindString": "Constructor",
          "name": "constructor",
          "signatures": Array [
            Object {
              "comment": Object {
                "shortText": "Constructs a new component and assigns itself the passed properties. You
should not construct new components yourself. Instead, Glimmer will
instantiate new components automatically as it renders.",
              },
              "flags": Object {},
              "id": 3,
              "inheritedFrom": Object {
                "name": "Component.constructor",
                "type": "reference",
              },
              "kind": 16384,
              "kindString": "Constructor signature",
              "name": "new default",
              "parameters": Array [
                Object {
                  "comment": Object {},
                  "flags": Object {},
                  "id": 4,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "owner",
                  "type": Object {
                    "name": "unknown",
                    "type": "intrinsic",
                  },
                },
                Object {
                  "comment": Object {
                    "shortText": "
",
                  },
                  "flags": Object {},
                  "id": 5,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "args",
                  "type": Object {
                    "declaration": Object {
                      "flags": Object {},
                      "id": 6,
                      "kind": 65536,
                      "kindString": "Type literal",
                      "name": "__type",
                    },
                    "type": "reflection",
                  },
                },
              ],
              "type": Object {
                "id": 1,
                "name": "default",
                "type": "reference",
              },
            },
          ],
        },
      ],
      "extendedTypes": Array [
        Object {
          "name": "Component",
          "type": "reference",
        },
      ],
      "flags": Object {},
      "groups": Array [
        Object {
          "children": Array [
            2,
          ],
          "kind": 512,
          "title": "Constructors",
        },
      ],
      "id": 1,
      "kind": 128,
      "kindString": "Class",
      "name": "default",
      "sources": Array [
        Object {
          "character": 21,
          "fileName": "test-packages/test-addon/addon/components/test-component.ts",
          "line": 3,
        },
      ],
    },
  ],
  "flags": Object {},
  "groups": Array [
    Object {
      "children": Array [
        1,
      ],
      "kind": 128,
      "title": "Classes",
    },
  ],
  "id": 0,
  "kind": 1,
  "kindString": "Project",
  "name": "test-addon",
  "originalName": "",
  "sources": Array [
    Object {
      "character": 0,
      "fileName": "test-packages/test-addon/addon/components/test-component.ts",
      "line": 1,
    },
  ],
}
`;

exports[`addon documentation generation only creates HTML output when configured 1`] = `
"<!DOCTYPE html><html class=\\"default\\"><head><meta charSet=\\"utf-8\\"/><meta http-equiv=\\"x-ua-compatible\\" content=\\"IE=edge\\"/><title>test-addon</title><meta name=\\"description\\" content=\\"Documentation for test-addon\\"/><meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1\\"/><link rel=\\"stylesheet\\" href=\\"assets/style.css\\"/><link rel=\\"stylesheet\\" href=\\"assets/highlight.css\\"/><script async src=\\"assets/search.js\\" id=\\"search-script\\"></script></head><body><script>document.body.classList.add(localStorage.getItem(\\"tsd-theme\\") || \\"os\\")</script><header><div class=\\"tsd-page-toolbar\\"><div class=\\"container\\"><div class=\\"table-wrap\\"><div class=\\"table-cell\\" id=\\"tsd-search\\" data-base=\\".\\"><div class=\\"field\\"><label for=\\"tsd-search-field\\" class=\\"tsd-widget search no-caption\\">Search</label><input type=\\"text\\" id=\\"tsd-search-field\\"/></div><ul class=\\"results\\"><li class=\\"state loading\\">Preparing search index...</li><li class=\\"state failure\\">The search index is not available</li></ul><a href=\\"index.html\\" class=\\"title\\">test-addon</a></div><div class=\\"table-cell\\" id=\\"tsd-widgets\\"><div id=\\"tsd-filter\\"><a href=\\"#\\" class=\\"tsd-widget options no-caption\\" data-toggle=\\"options\\">Options</a><div class=\\"tsd-filter-group\\"><div class=\\"tsd-select\\" id=\\"tsd-filter-visibility\\"><span class=\\"tsd-select-label\\">All</span><ul class=\\"tsd-select-list\\"><li data-value=\\"public\\">Public</li><li data-value=\\"protected\\">Public/Protected</li><li data-value=\\"private\\" class=\\"selected\\">All</li></ul></div> <input type=\\"checkbox\\" id=\\"tsd-filter-inherited\\" checked/><label class=\\"tsd-widget\\" for=\\"tsd-filter-inherited\\">Inherited</label></div></div><a href=\\"#\\" class=\\"tsd-widget menu no-caption\\" data-toggle=\\"menu\\">Menu</a></div></div></div></div><div class=\\"tsd-page-title\\"><div class=\\"container\\"><h1>test-addon</h1></div></div></header><div class=\\"container container-main\\"><div class=\\"row\\"><div class=\\"col-8 col-content\\"><div class=\\"tsd-panel tsd-typography\\"><p><a href=\\"https://badge.fury.io/js/ember-cli-typedoc\\"><img src=\\"https://badge.fury.io/js/ember-cli-typedoc.svg\\" alt=\\"npm version\\"></a>
<a href=\\"https://github.com/Bitwise-Development/ember-cli-typedoc/actions/workflows/ci.yml\\"><img src=\\"https://github.com/Bitwise-Development/ember-cli-typedoc/actions/workflows/ci.yml/badge.svg\\" alt=\\"CI\\"></a>
<a href=\\"https://coveralls.io/github/Bitwise-Development/ember-cli-typedoc?branch=master\\"><img src=\\"https://coveralls.io/repos/github/Bitwise-Development/ember-cli-typedoc/badge.svg?branch=master\\" alt=\\"Coverage Status\\"></a></p>

<a href=\\"#ember-cli-typedoc\\" id=\\"ember-cli-typedoc\\" style=\\"color: inherit; text-decoration: none;\\">
  <h1>ember-cli-typedoc</h1>
</a>
<p>TypeDoc documentation generation for EmberCLI projects.</p>

<a href=\\"#installation\\" id=\\"installation\\" style=\\"color: inherit; text-decoration: none;\\">
  <h2>Installation</h2>
</a>
<pre><code class=\\"language-bash\\"><span class=\\"hl-0\\">ember install ember-cli-typedoc</span>
</code></pre>

<a href=\\"#usage\\" id=\\"usage\\" style=\\"color: inherit; text-decoration: none;\\">
  <h2>Usage</h2>
</a>
<p>Docs generation is opt-in via either environment variable or build config.</p>
<pre><code class=\\"language-bash\\"><span class=\\"hl-0\\">TYPEDOC=true ember start</span>
</code></pre>
<pre><code class=\\"language-js\\"><span class=\\"hl-1\\">// ember-cli-build.js</span><br/><span class=\\"hl-2\\">const</span><span class=\\"hl-0\\"> </span><span class=\\"hl-3\\">EmberAddon</span><span class=\\"hl-0\\"> = </span><span class=\\"hl-4\\">require</span><span class=\\"hl-0\\">(</span><span class=\\"hl-5\\">&#39;ember-cli/lib/broccoli/ember-addon&#39;</span><span class=\\"hl-0\\">);</span><br/><br/><span class=\\"hl-6\\">module</span><span class=\\"hl-0\\">.</span><span class=\\"hl-6\\">exports</span><span class=\\"hl-0\\"> = </span><span class=\\"hl-2\\">function</span><span class=\\"hl-0\\"> (</span><span class=\\"hl-7\\">defaults</span><span class=\\"hl-0\\">) {</span><br/><span class=\\"hl-0\\">  </span><span class=\\"hl-8\\">return</span><span class=\\"hl-0\\"> </span><span class=\\"hl-2\\">new</span><span class=\\"hl-0\\"> </span><span class=\\"hl-4\\">EmberAddon</span><span class=\\"hl-0\\">(</span><span class=\\"hl-7\\">defaults</span><span class=\\"hl-0\\">, {</span><br/><span class=\\"hl-0\\">    </span><span class=\\"hl-5\\">&#39;ember-cli-typedoc&#39;</span><span class=\\"hl-7\\">:</span><span class=\\"hl-0\\"> {</span><br/><span class=\\"hl-0\\">      </span><span class=\\"hl-7\\">enabled:</span><span class=\\"hl-0\\"> </span><span class=\\"hl-2\\">true</span><span class=\\"hl-0\\">,</span><br/><span class=\\"hl-0\\">    },</span><br/><span class=\\"hl-0\\">  });</span><br/><span class=\\"hl-0\\">};</span>
</code></pre>

<a href=\\"#configuration\\" id=\\"configuration\\" style=\\"color: inherit; text-decoration: none;\\">
  <h2>Configuration</h2>
</a>
<p>Out of the box, <code>ember-cli-typedoc</code> has a couple of loosely held opinions; you&#39;re free to interject your own 
as required. The parent project&#39;s <code>/addon</code> directory is the default entrypoint, with <code>expand</code> as the default 
interpretation strategy. Private, protected, internal annotated, and external super class members are ignored.</p>
<p>Any configuration <a href=\\"https://typedoc.org/guides/options/\\">offered by TypeDoc</a> can be tweaked in the project&#39;s build
config.</p>
<p>Both HTML and JSON outputs are generated to a <code>/docs</code> directory, by default. The 
<a href=\\"https://typedoc.org/guides/options/#out\\">out</a> and <a href=\\"https://typedoc.org/guides/options/#json\\">json</a> arguments 
properties can be unset to limit this.</p>
<p>For example, to undo the aforementioned class member slights while limiting your output to JSON:</p>
<pre><code class=\\"language-js\\"><span class=\\"hl-2\\">const</span><span class=\\"hl-0\\"> </span><span class=\\"hl-3\\">EmberAddon</span><span class=\\"hl-0\\"> = </span><span class=\\"hl-4\\">require</span><span class=\\"hl-0\\">(</span><span class=\\"hl-5\\">&#39;ember-cli/lib/broccoli/ember-addon&#39;</span><span class=\\"hl-0\\">);</span><br/><br/><span class=\\"hl-6\\">module</span><span class=\\"hl-0\\">.</span><span class=\\"hl-6\\">exports</span><span class=\\"hl-0\\"> = </span><span class=\\"hl-2\\">function</span><span class=\\"hl-0\\"> (</span><span class=\\"hl-7\\">defaults</span><span class=\\"hl-0\\">) {</span><br/><span class=\\"hl-0\\">  </span><span class=\\"hl-8\\">return</span><span class=\\"hl-0\\"> </span><span class=\\"hl-2\\">new</span><span class=\\"hl-0\\"> </span><span class=\\"hl-4\\">EmberAddon</span><span class=\\"hl-0\\">(</span><span class=\\"hl-7\\">defaults</span><span class=\\"hl-0\\">, {</span><br/><span class=\\"hl-0\\">    </span><span class=\\"hl-5\\">&#39;ember-cli-typedoc&#39;</span><span class=\\"hl-7\\">:</span><span class=\\"hl-0\\"> {</span><br/><span class=\\"hl-0\\">      </span><span class=\\"hl-7\\">enabled:</span><span class=\\"hl-0\\"> </span><span class=\\"hl-2\\">true</span><span class=\\"hl-0\\">,</span><br/><span class=\\"hl-0\\">      </span><span class=\\"hl-7\\">excludeExternals:</span><span class=\\"hl-0\\"> </span><span class=\\"hl-2\\">false</span><span class=\\"hl-0\\">,</span><br/><span class=\\"hl-0\\">      </span><span class=\\"hl-7\\">excludePrivate:</span><span class=\\"hl-0\\"> </span><span class=\\"hl-2\\">false</span><span class=\\"hl-0\\">,</span><br/><span class=\\"hl-0\\">      </span><span class=\\"hl-7\\">excludeProtected:</span><span class=\\"hl-0\\"> </span><span class=\\"hl-2\\">false</span><span class=\\"hl-0\\">,</span><br/><span class=\\"hl-0\\">      </span><span class=\\"hl-7\\">excludeInternal:</span><span class=\\"hl-0\\"> </span><span class=\\"hl-2\\">false</span><span class=\\"hl-0\\">,</span><br/><span class=\\"hl-0\\">      </span><span class=\\"hl-7\\">out:</span><span class=\\"hl-0\\"> </span><span class=\\"hl-2\\">undefined</span><span class=\\"hl-0\\">,</span><br/><span class=\\"hl-0\\">    },</span><br/><span class=\\"hl-0\\">  });</span><br/><span class=\\"hl-0\\">};</span>
</code></pre>
</div></div><div class=\\"col-4 col-menu menu-sticky-wrap menu-highlight\\"><nav class=\\"tsd-navigation primary\\"><ul><li class=\\"current\\"><a href=\\"modules.html\\">Exports</a></li></ul></nav><nav class=\\"tsd-navigation secondary menu-sticky\\"><ul><li class=\\"tsd-kind-class\\"><a href=\\"classes/default.html\\" class=\\"tsd-kind-icon\\">default</a></li></ul></nav></div></div></div><footer class=\\"with-border-bottom\\"><div class=\\"container\\"><h2>Legend</h2><div class=\\"tsd-legend-group\\"><ul class=\\"tsd-legend\\"><li class=\\"tsd-kind-constructor tsd-parent-kind-class tsd-is-inherited\\"><span class=\\"tsd-kind-icon\\">Inherited constructor</span></li></ul></div><h2>Settings</h2><p>Theme <select id=\\"theme\\"><option value=\\"os\\">OS</option><option value=\\"light\\">Light</option><option value=\\"dark\\">Dark</option></select></p></div></footer><div class=\\"container tsd-generator\\"><p>Generated using <a href=\\"https://typedoc.org/\\" target=\\"_blank\\">TypeDoc</a></p></div><div class=\\"overlay\\"></div><script src=\\"assets/main.js\\"></script></body></html>"
`;

exports[`addon documentation generation only creates JSON output when configured 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "flags": Object {},
          "id": 2,
          "inheritedFrom": Object {
            "name": "Component.constructor",
            "type": "reference",
          },
          "kind": 512,
          "kindString": "Constructor",
          "name": "constructor",
          "signatures": Array [
            Object {
              "comment": Object {
                "shortText": "Constructs a new component and assigns itself the passed properties. You
should not construct new components yourself. Instead, Glimmer will
instantiate new components automatically as it renders.",
              },
              "flags": Object {},
              "id": 3,
              "inheritedFrom": Object {
                "name": "Component.constructor",
                "type": "reference",
              },
              "kind": 16384,
              "kindString": "Constructor signature",
              "name": "new default",
              "parameters": Array [
                Object {
                  "comment": Object {},
                  "flags": Object {},
                  "id": 4,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "owner",
                  "type": Object {
                    "name": "unknown",
                    "type": "intrinsic",
                  },
                },
                Object {
                  "comment": Object {
                    "shortText": "
",
                  },
                  "flags": Object {},
                  "id": 5,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "args",
                  "type": Object {
                    "declaration": Object {
                      "flags": Object {},
                      "id": 6,
                      "kind": 65536,
                      "kindString": "Type literal",
                      "name": "__type",
                    },
                    "type": "reflection",
                  },
                },
              ],
              "type": Object {
                "id": 1,
                "name": "default",
                "type": "reference",
              },
            },
          ],
        },
      ],
      "extendedTypes": Array [
        Object {
          "name": "Component",
          "type": "reference",
        },
      ],
      "flags": Object {},
      "groups": Array [
        Object {
          "children": Array [
            2,
          ],
          "kind": 512,
          "title": "Constructors",
        },
      ],
      "id": 1,
      "kind": 128,
      "kindString": "Class",
      "name": "default",
      "sources": Array [
        Object {
          "character": 21,
          "fileName": "test-packages/test-addon/addon/components/test-component.ts",
          "line": 3,
        },
      ],
    },
  ],
  "flags": Object {},
  "groups": Array [
    Object {
      "children": Array [
        1,
      ],
      "kind": 128,
      "title": "Classes",
    },
  ],
  "id": 0,
  "kind": 1,
  "kindString": "Project",
  "name": "test-addon",
  "originalName": "",
  "sources": Array [
    Object {
      "character": 0,
      "fileName": "test-packages/test-addon/addon/components/test-component.ts",
      "line": 1,
    },
  ],
}
`;
