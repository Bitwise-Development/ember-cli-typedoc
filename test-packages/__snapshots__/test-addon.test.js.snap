// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`addon documentation generation creates documentation when the "enabled" config flag is set 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "flags": Object {},
          "id": 2,
          "inheritedFrom": Object {
            "name": "Component.constructor",
            "type": "reference",
          },
          "kind": 512,
          "kindString": "Constructor",
          "name": "constructor",
          "signatures": Array [
            Object {
              "comment": Object {
                "shortText": "Constructs a new component and assigns itself the passed properties. You
should not construct new components yourself. Instead, Glimmer will
instantiate new components automatically as it renders.",
              },
              "flags": Object {},
              "id": 3,
              "inheritedFrom": Object {
                "name": "Component.constructor",
                "type": "reference",
              },
              "kind": 16384,
              "kindString": "Constructor signature",
              "name": "new default",
              "parameters": Array [
                Object {
                  "comment": Object {},
                  "flags": Object {},
                  "id": 4,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "owner",
                  "type": Object {
                    "name": "unknown",
                    "type": "intrinsic",
                  },
                },
                Object {
                  "comment": Object {
                    "shortText": "
",
                  },
                  "flags": Object {},
                  "id": 5,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "args",
                  "type": Object {
                    "declaration": Object {
                      "flags": Object {},
                      "id": 6,
                      "kind": 65536,
                      "kindString": "Type literal",
                      "name": "__type",
                    },
                    "type": "reflection",
                  },
                },
              ],
              "type": Object {
                "id": 1,
                "name": "default",
                "type": "reference",
              },
            },
          ],
        },
        Object {
          "flags": Object {
            "isExternal": true,
          },
          "id": 7,
          "inheritedFrom": Object {
            "name": "Component.args",
            "type": "reference",
          },
          "kind": 1024,
          "kindString": "Property",
          "name": "args",
          "sources": Array [
            Object {
              "character": 4,
              "fileName": "node_modules/@glimmer/component/dist/types/src/component.d.ts",
              "line": 7,
            },
          ],
          "type": Object {
            "declaration": Object {
              "flags": Object {},
              "id": 8,
              "kind": 65536,
              "kindString": "Type literal",
              "name": "__type",
            },
            "type": "reflection",
          },
        },
        Object {
          "comment": Object {
            "shortText": "Contains the first and last DOM nodes of a component's rendered template.
These nodes can be used to traverse all of the DOM nodes that belong to a
particular component.",
            "text": "Note that a component's first and last nodes *can* change over time, if the
beginning or ending of the template is dynamic. You should always access
\`bounds\` directly at the time a node is needed to ensure you are acting on
up-to-date nodes.

### Examples

For components with a single root element, \`this.bounds.firstNode\` and
\`this.bounds.lastNode\` are the same.

\`\`\`hbs
<div class=\\"user-profile\\">
  <Avatar @user={{user}} />
</div>
\`\`\`

\`\`\`ts
export default class extends Component {
  didInsertElement() {
    let { firstNode, lastNode } = this.bounds;
    console.log(firstNode === lastNode); // true
    console.log(firstNode.className); // \\"user-profile\\"
  }
}
\`\`\`

For components with multiple root nodes, \`this.bounds.firstNode\` refers to
the first node in the template and \`this.bounds.lastNode\` refers to the
last:

\`\`\`hbs
Welcome to Glimmer.js!
<span>Let's build some components!</span>
<img src=\\"logo.png\\">
\`\`\`

\`\`\`ts
export default class extends Component {
  didInsertElement() {
    let { firstNode, lastNode } = this.bounds;

    // Walk all of the DOM siblings from the
    // firstNode to the lastNode and push their
    // nodeName into an array.
    let node = firstNode;
    let names = [firstNode.nodeName];
    do {
      node = node.nextSibling;
      names.push(node.nodeName);
    } while (node !== lastNode);

    console.log(names);
    // [\\"#text\\", \\"SPAN\\", \\"IMG\\"]
  }
}
\`\`\`

The bounds can change if the template has dynamic content at the beginning
or the end:

\`\`\`hbs
{{#if user.isAdmin}}
  <span class=\\"warning\\">Admin</span>
{{else}}
  Normal User
{{/if}}
\`\`\`

In this example, the \`firstNode\` will change between a \`span\` element and a
\`TextNode\` as the \`user.isAdmin\` property changes.
",
          },
          "flags": Object {
            "isExternal": true,
          },
          "id": 14,
          "inheritedFrom": Object {
            "name": "Component.bounds",
            "type": "reference",
          },
          "kind": 1024,
          "kindString": "Property",
          "name": "bounds",
          "sources": Array [
            Object {
              "character": 4,
              "fileName": "node_modules/@glimmer/component/dist/types/src/component.d.ts",
              "line": 98,
            },
          ],
          "type": Object {
            "name": "Bounds",
            "type": "reference",
          },
        },
        Object {
          "comment": Object {
            "shortText": "Development-mode only name of the component, useful for debugging.",
          },
          "flags": Object {
            "isExternal": true,
            "isReadonly": true,
          },
          "id": 9,
          "inheritedFrom": Object {
            "name": "Component.debugName",
            "type": "reference",
          },
          "kind": 1024,
          "kindString": "Property",
          "name": "debugName",
          "sources": Array [
            Object {
              "character": 13,
              "fileName": "node_modules/@glimmer/component/dist/types/src/component.d.ts",
              "line": 11,
            },
          ],
          "type": Object {
            "name": "string",
            "type": "intrinsic",
          },
        },
        Object {
          "comment": Object {
            "shortText": "The element corresponding to the main element of the component's template.
The main element is the element in the template that has \`...attributes\` set on it:",
            "text": "\`\`\`hbs
<h1>Modal</h1>
<div class=\\"contents\\" ...attributes>
  {{yield}}
</div>
\`\`\`

In this example, \`this.element\` would be the \`div\` with the class \`contents\`.

You should not try to access this property until after the component's \`didInsertElement()\`
lifecycle hook is called.
",
          },
          "flags": Object {
            "isExternal": true,
            "isReadonly": true,
          },
          "id": 15,
          "inheritedFrom": Object {
            "name": "Component.element",
            "type": "reference",
          },
          "kind": 1024,
          "kindString": "Property",
          "name": "element",
          "sources": Array [
            Object {
              "character": 13,
              "fileName": "node_modules/@glimmer/component/dist/types/src/component.d.ts",
              "line": 115,
            },
          ],
          "type": Object {
            "name": "HTMLElement",
            "type": "reference",
          },
        },
        Object {
          "flags": Object {
            "isExternal": true,
            "isReadonly": true,
          },
          "id": 17,
          "inheritedFrom": Object {
            "name": "Component.isDestroyed",
            "type": "reference",
          },
          "kind": 1024,
          "kindString": "Property",
          "name": "isDestroyed",
          "sources": Array [
            Object {
              "character": 13,
              "fileName": "node_modules/@glimmer/component/dist/types/addon/-private/component.d.ts",
              "line": 161,
            },
          ],
          "type": Object {
            "name": "boolean",
            "type": "intrinsic",
          },
        },
        Object {
          "flags": Object {
            "isExternal": true,
            "isReadonly": true,
          },
          "id": 16,
          "inheritedFrom": Object {
            "name": "Component.isDestroying",
            "type": "reference",
          },
          "kind": 1024,
          "kindString": "Property",
          "name": "isDestroying",
          "sources": Array [
            Object {
              "character": 13,
              "fileName": "node_modules/@glimmer/component/dist/types/addon/-private/component.d.ts",
              "line": 160,
            },
          ],
          "type": Object {
            "name": "boolean",
            "type": "intrinsic",
          },
        },
        Object {
          "flags": Object {
            "isExternal": true,
          },
          "id": 10,
          "inheritedFrom": Object {
            "name": "Component.didInsertElement",
            "type": "reference",
          },
          "kind": 2048,
          "kindString": "Method",
          "name": "didInsertElement",
          "signatures": Array [
            Object {
              "comment": Object {
                "shortText": "Called when the component has been inserted into the DOM.
Override this function to do any set up that requires an element in the document body.",
              },
              "flags": Object {
                "isExternal": true,
              },
              "id": 11,
              "inheritedFrom": Object {
                "name": "Component.didInsertElement",
                "type": "reference",
              },
              "kind": 4096,
              "kindString": "Call signature",
              "name": "didInsertElement",
              "type": Object {
                "name": "void",
                "type": "intrinsic",
              },
            },
          ],
          "sources": Array [
            Object {
              "character": 4,
              "fileName": "node_modules/@glimmer/component/dist/types/src/component.d.ts",
              "line": 16,
            },
          ],
        },
        Object {
          "flags": Object {
            "isExternal": true,
          },
          "id": 12,
          "inheritedFrom": Object {
            "name": "Component.didUpdate",
            "type": "reference",
          },
          "kind": 2048,
          "kindString": "Method",
          "name": "didUpdate",
          "signatures": Array [
            Object {
              "comment": Object {
                "shortText": "Called when the component has updated and rerendered itself.
Called only during a rerender, not during an initial render.",
              },
              "flags": Object {
                "isExternal": true,
              },
              "id": 13,
              "inheritedFrom": Object {
                "name": "Component.didUpdate",
                "type": "reference",
              },
              "kind": 4096,
              "kindString": "Call signature",
              "name": "didUpdate",
              "type": Object {
                "name": "void",
                "type": "intrinsic",
              },
            },
          ],
          "sources": Array [
            Object {
              "character": 4,
              "fileName": "node_modules/@glimmer/component/dist/types/src/component.d.ts",
              "line": 21,
            },
          ],
        },
        Object {
          "flags": Object {
            "isExternal": true,
          },
          "id": 18,
          "inheritedFrom": Object {
            "name": "Component.willDestroy",
            "type": "reference",
          },
          "kind": 2048,
          "kindString": "Method",
          "name": "willDestroy",
          "signatures": Array [
            Object {
              "comment": Object {
                "shortText": "Called before the component has been removed from the DOM.",
              },
              "flags": Object {
                "isExternal": true,
              },
              "id": 19,
              "inheritedFrom": Object {
                "name": "Component.willDestroy",
                "type": "reference",
              },
              "kind": 4096,
              "kindString": "Call signature",
              "name": "willDestroy",
              "type": Object {
                "name": "void",
                "type": "intrinsic",
              },
            },
          ],
          "sources": Array [
            Object {
              "character": 4,
              "fileName": "node_modules/@glimmer/component/dist/types/addon/-private/component.d.ts",
              "line": 165,
            },
          ],
        },
      ],
      "extendedTypes": Array [
        Object {
          "name": "Component",
          "type": "reference",
        },
      ],
      "flags": Object {},
      "groups": Array [
        Object {
          "children": Array [
            2,
          ],
          "kind": 512,
          "title": "Constructors",
        },
        Object {
          "children": Array [
            7,
            14,
            9,
            15,
            17,
            16,
          ],
          "kind": 1024,
          "title": "Properties",
        },
        Object {
          "children": Array [
            10,
            12,
            18,
          ],
          "kind": 2048,
          "title": "Methods",
        },
      ],
      "id": 1,
      "kind": 128,
      "kindString": "Class",
      "name": "default",
      "sources": Array [
        Object {
          "character": 21,
          "fileName": "test-packages/test-addon/addon/components/test-component.ts",
          "line": 3,
        },
      ],
    },
  ],
  "flags": Object {},
  "groups": Array [
    Object {
      "children": Array [
        1,
      ],
      "kind": 128,
      "title": "Classes",
    },
  ],
  "id": 0,
  "kind": 1,
  "kindString": "Project",
  "name": "test-addon",
  "originalName": "",
  "sources": Array [
    Object {
      "character": 0,
      "fileName": "test-packages/test-addon/addon/components/test-component.ts",
      "line": 1,
    },
  ],
}
`;

exports[`addon documentation generation creates documentation when the env var is set 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "flags": Object {},
          "id": 2,
          "inheritedFrom": Object {
            "name": "Component.constructor",
            "type": "reference",
          },
          "kind": 512,
          "kindString": "Constructor",
          "name": "constructor",
          "signatures": Array [
            Object {
              "comment": Object {
                "shortText": "Constructs a new component and assigns itself the passed properties. You
should not construct new components yourself. Instead, Glimmer will
instantiate new components automatically as it renders.",
              },
              "flags": Object {},
              "id": 3,
              "inheritedFrom": Object {
                "name": "Component.constructor",
                "type": "reference",
              },
              "kind": 16384,
              "kindString": "Constructor signature",
              "name": "new default",
              "parameters": Array [
                Object {
                  "comment": Object {},
                  "flags": Object {},
                  "id": 4,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "owner",
                  "type": Object {
                    "name": "unknown",
                    "type": "intrinsic",
                  },
                },
                Object {
                  "comment": Object {
                    "shortText": "
",
                  },
                  "flags": Object {},
                  "id": 5,
                  "kind": 32768,
                  "kindString": "Parameter",
                  "name": "args",
                  "type": Object {
                    "declaration": Object {
                      "flags": Object {},
                      "id": 6,
                      "kind": 65536,
                      "kindString": "Type literal",
                      "name": "__type",
                    },
                    "type": "reflection",
                  },
                },
              ],
              "type": Object {
                "id": 1,
                "name": "default",
                "type": "reference",
              },
            },
          ],
        },
        Object {
          "flags": Object {
            "isExternal": true,
          },
          "id": 7,
          "inheritedFrom": Object {
            "name": "Component.args",
            "type": "reference",
          },
          "kind": 1024,
          "kindString": "Property",
          "name": "args",
          "sources": Array [
            Object {
              "character": 4,
              "fileName": "node_modules/@glimmer/component/dist/types/src/component.d.ts",
              "line": 7,
            },
          ],
          "type": Object {
            "declaration": Object {
              "flags": Object {},
              "id": 8,
              "kind": 65536,
              "kindString": "Type literal",
              "name": "__type",
            },
            "type": "reflection",
          },
        },
        Object {
          "comment": Object {
            "shortText": "Contains the first and last DOM nodes of a component's rendered template.
These nodes can be used to traverse all of the DOM nodes that belong to a
particular component.",
            "text": "Note that a component's first and last nodes *can* change over time, if the
beginning or ending of the template is dynamic. You should always access
\`bounds\` directly at the time a node is needed to ensure you are acting on
up-to-date nodes.

### Examples

For components with a single root element, \`this.bounds.firstNode\` and
\`this.bounds.lastNode\` are the same.

\`\`\`hbs
<div class=\\"user-profile\\">
  <Avatar @user={{user}} />
</div>
\`\`\`

\`\`\`ts
export default class extends Component {
  didInsertElement() {
    let { firstNode, lastNode } = this.bounds;
    console.log(firstNode === lastNode); // true
    console.log(firstNode.className); // \\"user-profile\\"
  }
}
\`\`\`

For components with multiple root nodes, \`this.bounds.firstNode\` refers to
the first node in the template and \`this.bounds.lastNode\` refers to the
last:

\`\`\`hbs
Welcome to Glimmer.js!
<span>Let's build some components!</span>
<img src=\\"logo.png\\">
\`\`\`

\`\`\`ts
export default class extends Component {
  didInsertElement() {
    let { firstNode, lastNode } = this.bounds;

    // Walk all of the DOM siblings from the
    // firstNode to the lastNode and push their
    // nodeName into an array.
    let node = firstNode;
    let names = [firstNode.nodeName];
    do {
      node = node.nextSibling;
      names.push(node.nodeName);
    } while (node !== lastNode);

    console.log(names);
    // [\\"#text\\", \\"SPAN\\", \\"IMG\\"]
  }
}
\`\`\`

The bounds can change if the template has dynamic content at the beginning
or the end:

\`\`\`hbs
{{#if user.isAdmin}}
  <span class=\\"warning\\">Admin</span>
{{else}}
  Normal User
{{/if}}
\`\`\`

In this example, the \`firstNode\` will change between a \`span\` element and a
\`TextNode\` as the \`user.isAdmin\` property changes.
",
          },
          "flags": Object {
            "isExternal": true,
          },
          "id": 14,
          "inheritedFrom": Object {
            "name": "Component.bounds",
            "type": "reference",
          },
          "kind": 1024,
          "kindString": "Property",
          "name": "bounds",
          "sources": Array [
            Object {
              "character": 4,
              "fileName": "node_modules/@glimmer/component/dist/types/src/component.d.ts",
              "line": 98,
            },
          ],
          "type": Object {
            "name": "Bounds",
            "type": "reference",
          },
        },
        Object {
          "comment": Object {
            "shortText": "Development-mode only name of the component, useful for debugging.",
          },
          "flags": Object {
            "isExternal": true,
            "isReadonly": true,
          },
          "id": 9,
          "inheritedFrom": Object {
            "name": "Component.debugName",
            "type": "reference",
          },
          "kind": 1024,
          "kindString": "Property",
          "name": "debugName",
          "sources": Array [
            Object {
              "character": 13,
              "fileName": "node_modules/@glimmer/component/dist/types/src/component.d.ts",
              "line": 11,
            },
          ],
          "type": Object {
            "name": "string",
            "type": "intrinsic",
          },
        },
        Object {
          "comment": Object {
            "shortText": "The element corresponding to the main element of the component's template.
The main element is the element in the template that has \`...attributes\` set on it:",
            "text": "\`\`\`hbs
<h1>Modal</h1>
<div class=\\"contents\\" ...attributes>
  {{yield}}
</div>
\`\`\`

In this example, \`this.element\` would be the \`div\` with the class \`contents\`.

You should not try to access this property until after the component's \`didInsertElement()\`
lifecycle hook is called.
",
          },
          "flags": Object {
            "isExternal": true,
            "isReadonly": true,
          },
          "id": 15,
          "inheritedFrom": Object {
            "name": "Component.element",
            "type": "reference",
          },
          "kind": 1024,
          "kindString": "Property",
          "name": "element",
          "sources": Array [
            Object {
              "character": 13,
              "fileName": "node_modules/@glimmer/component/dist/types/src/component.d.ts",
              "line": 115,
            },
          ],
          "type": Object {
            "name": "HTMLElement",
            "type": "reference",
          },
        },
        Object {
          "flags": Object {
            "isExternal": true,
            "isReadonly": true,
          },
          "id": 17,
          "inheritedFrom": Object {
            "name": "Component.isDestroyed",
            "type": "reference",
          },
          "kind": 1024,
          "kindString": "Property",
          "name": "isDestroyed",
          "sources": Array [
            Object {
              "character": 13,
              "fileName": "node_modules/@glimmer/component/dist/types/addon/-private/component.d.ts",
              "line": 161,
            },
          ],
          "type": Object {
            "name": "boolean",
            "type": "intrinsic",
          },
        },
        Object {
          "flags": Object {
            "isExternal": true,
            "isReadonly": true,
          },
          "id": 16,
          "inheritedFrom": Object {
            "name": "Component.isDestroying",
            "type": "reference",
          },
          "kind": 1024,
          "kindString": "Property",
          "name": "isDestroying",
          "sources": Array [
            Object {
              "character": 13,
              "fileName": "node_modules/@glimmer/component/dist/types/addon/-private/component.d.ts",
              "line": 160,
            },
          ],
          "type": Object {
            "name": "boolean",
            "type": "intrinsic",
          },
        },
        Object {
          "flags": Object {
            "isExternal": true,
          },
          "id": 10,
          "inheritedFrom": Object {
            "name": "Component.didInsertElement",
            "type": "reference",
          },
          "kind": 2048,
          "kindString": "Method",
          "name": "didInsertElement",
          "signatures": Array [
            Object {
              "comment": Object {
                "shortText": "Called when the component has been inserted into the DOM.
Override this function to do any set up that requires an element in the document body.",
              },
              "flags": Object {
                "isExternal": true,
              },
              "id": 11,
              "inheritedFrom": Object {
                "name": "Component.didInsertElement",
                "type": "reference",
              },
              "kind": 4096,
              "kindString": "Call signature",
              "name": "didInsertElement",
              "type": Object {
                "name": "void",
                "type": "intrinsic",
              },
            },
          ],
          "sources": Array [
            Object {
              "character": 4,
              "fileName": "node_modules/@glimmer/component/dist/types/src/component.d.ts",
              "line": 16,
            },
          ],
        },
        Object {
          "flags": Object {
            "isExternal": true,
          },
          "id": 12,
          "inheritedFrom": Object {
            "name": "Component.didUpdate",
            "type": "reference",
          },
          "kind": 2048,
          "kindString": "Method",
          "name": "didUpdate",
          "signatures": Array [
            Object {
              "comment": Object {
                "shortText": "Called when the component has updated and rerendered itself.
Called only during a rerender, not during an initial render.",
              },
              "flags": Object {
                "isExternal": true,
              },
              "id": 13,
              "inheritedFrom": Object {
                "name": "Component.didUpdate",
                "type": "reference",
              },
              "kind": 4096,
              "kindString": "Call signature",
              "name": "didUpdate",
              "type": Object {
                "name": "void",
                "type": "intrinsic",
              },
            },
          ],
          "sources": Array [
            Object {
              "character": 4,
              "fileName": "node_modules/@glimmer/component/dist/types/src/component.d.ts",
              "line": 21,
            },
          ],
        },
        Object {
          "flags": Object {
            "isExternal": true,
          },
          "id": 18,
          "inheritedFrom": Object {
            "name": "Component.willDestroy",
            "type": "reference",
          },
          "kind": 2048,
          "kindString": "Method",
          "name": "willDestroy",
          "signatures": Array [
            Object {
              "comment": Object {
                "shortText": "Called before the component has been removed from the DOM.",
              },
              "flags": Object {
                "isExternal": true,
              },
              "id": 19,
              "inheritedFrom": Object {
                "name": "Component.willDestroy",
                "type": "reference",
              },
              "kind": 4096,
              "kindString": "Call signature",
              "name": "willDestroy",
              "type": Object {
                "name": "void",
                "type": "intrinsic",
              },
            },
          ],
          "sources": Array [
            Object {
              "character": 4,
              "fileName": "node_modules/@glimmer/component/dist/types/addon/-private/component.d.ts",
              "line": 165,
            },
          ],
        },
      ],
      "extendedTypes": Array [
        Object {
          "name": "Component",
          "type": "reference",
        },
      ],
      "flags": Object {},
      "groups": Array [
        Object {
          "children": Array [
            2,
          ],
          "kind": 512,
          "title": "Constructors",
        },
        Object {
          "children": Array [
            7,
            14,
            9,
            15,
            17,
            16,
          ],
          "kind": 1024,
          "title": "Properties",
        },
        Object {
          "children": Array [
            10,
            12,
            18,
          ],
          "kind": 2048,
          "title": "Methods",
        },
      ],
      "id": 1,
      "kind": 128,
      "kindString": "Class",
      "name": "default",
      "sources": Array [
        Object {
          "character": 21,
          "fileName": "test-packages/test-addon/addon/components/test-component.ts",
          "line": 3,
        },
      ],
    },
  ],
  "flags": Object {},
  "groups": Array [
    Object {
      "children": Array [
        1,
      ],
      "kind": 128,
      "title": "Classes",
    },
  ],
  "id": 0,
  "kind": 1,
  "kindString": "Project",
  "name": "test-addon",
  "originalName": "",
  "sources": Array [
    Object {
      "character": 0,
      "fileName": "test-packages/test-addon/addon/components/test-component.ts",
      "line": 1,
    },
  ],
}
`;
